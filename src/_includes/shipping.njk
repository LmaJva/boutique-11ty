<label for="destination">Destination :</label>
<select id="destination" name="destination">
  {% for zone, data in shipping.grille_tarifs %}
    {% for country in data.pays[page.lang] %}
      <option value="{{ zone }}">
        {{ country }}
      </option>
    {% endfor %}
  {% endfor %}
</select>

<p>
  Frais de transport (colissimo la Poste) : 
  <span id="shipping-cost">--</span> €
</p>

<script>
  const shippingWeight = 241; // Poids en grammes des objets
  const shippingType = 'colis_base'; // Type de colis sélectionné
  const shippingData = {{ shipping | dump | safe }}; // Injection des données YAML

  document.addEventListener('DOMContentLoaded', function () {
    const destinationSelect = document.getElementById('destination');
    const shippingCostElement = document.getElementById('shipping-cost');

    function calculateShippingCost() {
      const selectedZone = destinationSelect.value;

      // Vérifie si une zone est sélectionnée
      if (!selectedZone || !shippingData.grille_tarifs[selectedZone]) {
        shippingCostElement.textContent = '--';
        return;
      }

      // Récupère le poids de l'emballage du type de colis
      const colisData = shippingData.types_colis[shippingType];
      const colisWeight = colisData ? colisData.poids_emballage : 0;

      // Ajoute le poids du colis au poids des objets
      const totalWeight = shippingWeight + colisWeight;

      // Récupère les tarifs de la zone sélectionnée
      const tarifs = shippingData.grille_tarifs[selectedZone].tarifs;

      // Trouve le tarif correspondant au poids total
      const tarif = tarifs.find(t => totalWeight <= t.poids_max);

      // Affiche le tarif ou "--" si non trouvé
      shippingCostElement.textContent = tarif ? `${tarif.tarif}` : '--';
    }

    // Ajoute un écouteur pour recalculer les frais à chaque changement de destination
    destinationSelect.addEventListener('change', calculateShippingCost);

    // Calcul initial au chargement de la page
    calculateShippingCost();
  });
</script>
